storm_data$EVTYPE.clean <- gsub("S$","", storm_data$EVTYPE.clean, ignore.case = TRUE)
#take out any double spaces
storm_data$EVTYPE.clean <- gsub("  ", " ", storm_data$EVTYPE.clean)
#i think it's possible we introduced whitespace, better trim again
storm_data$EVTYPE.clean <- str_trim(storm_data$EVTYPE.clean)
match_vector <- amatch(storm_data$EVTYPE.clean , evtypes$EVTYPE.offical)
storm_data$EVTYPE.clean <- evtypes$EVTYPE.offical[match_vector]
#finally, anything that we haven't converted should go from NA to OTHER
storm_data$EVTYPE.clean[is.na(storm_data$EVTYPE.clean)] <- "OTHER"
#convert the damage and their partner exponent vairables to a cash variable
#we will use the below qdap table to map exponent to a multiplier variable and then to cash
h = 10^2
k = 10^3
th = 10^4
hh = 10^5
m = 10^6
b = 10^9
key <- data.frame(
c( "H", "h", "2",
"k", "K", "3",
"4",
"5",
"m", "M", "6",
"b", "B","9"),
c( h, h, h,
k, k, k,
th,
hh,
m, m, m,
b, b, b)
)
colnames(key) <- c("key", "value")
storm_data$CROP.multiplier <- lookup(key.match = key, storm_data$CROPDMGEXP, missing = 1)
storm_data$CROP.cash <- storm_data$CROPDMG * storm_data$CROP.multiplier
storm_data$PROP.multiplier <- lookup(key.match = key, storm_data$PROPDMGEXP, missing = 1)
storm_data$PROP.cash <- storm_data$PROPDMG * storm_data$PROP.multiplier
## There are a lot of columns we can drop
cols_to_keep <- c("YEAR",
"EVTYPE.clean",
"CROP.cash",
"PROP.cash")
storm_data <- storm_data[cols_to_keep]
View(storm_data_full)
colnames(storm_data_full)
#download.file(source_url, destfile = local_filename)
#storm_data_full <- read.csv(bzfile(local_filename), strip.white=TRUE)
#storm_data_full <- read.csv(local_filename, strip.white=TRUE)
cols_to_keep <- c("BGN_DATE",
"CROPDMG",
"CROPDMGEXP",
"PROPDMG",
"PROPDMGEXP",
"EVTYPE",
"INJURIES",
"FATALITIES")
storm_data <- storm_data_full[cols_to_keep]
#Pull the year out of the BGN_DATE column.
regex_pattern <- "\\d\\d?/\\d\\d?/(\\d\\d\\d\\d).*"
storm_data$YEAR <- as.numeric(gsub(regex_pattern, "\\1", storm_data$BGN_DATE))
#since we want to be fair to all the events
storm_data <- storm_data[storm_data$YEAR >= "1996",]
library(dplyr)
library(qdap)
library(stringr)
source_url = "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
local_filename = "StormData.csv.bz2"
evtype_file = "official_evtype.csv"
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
#download.file(source_url, destfile = local_filename)
storm_data_full <- read.csv(bzfile(local_filename), strip.white=TRUE)
#storm_data_full <- read.csv(local_filename, strip.white=TRUE)
cols_to_keep <- c("BGN_DATE",
"CROPDMG",
"CROPDMGEXP",
"PROPDMG",
"PROPDMGEXP",
"EVTYPE",
"INJURIES",
"FATALITIES")
storm_data <- storm_data_full[cols_to_keep]
#Pull the year out of the BGN_DATE column.
regex_pattern <- "\\d\\d?/\\d\\d?/(\\d\\d\\d\\d).*"
storm_data$YEAR <- as.numeric(gsub(regex_pattern, "\\1", storm_data$BGN_DATE))
#since we want to be fair to all the events
storm_data <- storm_data[storm_data$YEAR >= "1996",]
evtypes <- read.csv("official_evtype.csv", strip.white = TRUE)
evtypes$EVTYPE.offical <- toupper(evtypes$EVTYPE.offical)
#convert all of EVTYPE to upper case
storm_data$EVTYPE.clean <- str_trim(toupper(storm_data$EVTYPE))
#remove all summary rows, i.e., rows containing the word "SUMMARY" from EVTYPE.clean
storm_data <- storm_data[grep(".*(SUMMARY).*$", storm_data$EVTYPE.clean, invert = TRUE),]
#replace all instances of TSTM with THUNDERSTORM
storm_data$EVTYPE.clean <- gsub("TSTM", "THUNDERSTORM", storm_data$EVTYPE.clean, ignore.case = TRUE)
#cold should always be followed by /wind chill
storm_data$EVTYPE.clean <- gsub("COLD$", "COLD/WIND CHILL", storm_data$EVTYPE.clean, ignore.case = TRUE)
#hurricane should always be followed by /typhon
storm_data$EVTYPE.clean <- gsub("HURRICANE$", "HURRICANE/TYPHOON", storm_data$EVTYPE.clean, ignore.case = TRUE)
#frost should always be followed by /freeze
storm_data$EVTYPE.clean <- gsub("FROST$", "FROST/FREEZE", storm_data$EVTYPE.clean, ignore.case = TRUE)
#get rid of "DAMAGE"
storm_data$EVTYPE.clean <- gsub(" DAMAGE", "", storm_data$EVTYPE.clean, ignore.case = TRUE)
#take out any brackets and their contents
storm_data$EVTYPE.clean <- gsub("\\(.*\\)", "", storm_data$EVTYPE.clean, ignore.case = TRUE)
#if we've managed to add leading and trailing whitesapce, get rid of that
storm_data$EVTYPE.clean <- str_trim(storm_data$EVTYPE.clean)
#take out any trailing Ss. The official does not contain pluralizations
storm_data$EVTYPE.clean <- gsub("S$","", storm_data$EVTYPE.clean, ignore.case = TRUE)
#take out any double spaces
storm_data$EVTYPE.clean <- gsub("  ", " ", storm_data$EVTYPE.clean)
#i think it's possible we introduced whitespace, better trim again
storm_data$EVTYPE.clean <- str_trim(storm_data$EVTYPE.clean)
match_vector <- amatch(storm_data$EVTYPE.clean , evtypes$EVTYPE.offical)
storm_data$EVTYPE.clean <- evtypes$EVTYPE.offical[match_vector]
#finally, anything that we haven't converted should go from NA to OTHER
storm_data$EVTYPE.clean[is.na(storm_data$EVTYPE.clean)] <- "OTHER"
evtypes <- read.csv("official_evtype.csv", strip.white = TRUE)
evtypes$EVTYPE.offical <- toupper(evtypes$EVTYPE.offical)
#convert all of EVTYPE to upper case
storm_data$EVTYPE.clean <- str_trim(toupper(storm_data$EVTYPE))
#remove all summary rows, i.e., rows containing the word "SUMMARY" from EVTYPE.clean
storm_data <- storm_data[grep(".*(SUMMARY).*$", storm_data$EVTYPE.clean, invert = TRUE),]
#replace all instances of TSTM with THUNDERSTORM
storm_data$EVTYPE.clean <- gsub("TSTM", "THUNDERSTORM", storm_data$EVTYPE.clean, ignore.case = TRUE)
#cold should always be followed by /wind chill
storm_data$EVTYPE.clean <- gsub("COLD$", "COLD/WIND CHILL", storm_data$EVTYPE.clean, ignore.case = TRUE)
#hurricane should always be followed by /typhon
storm_data$EVTYPE.clean <- gsub("HURRICANE$", "HURRICANE/TYPHOON", storm_data$EVTYPE.clean, ignore.case = TRUE)
#frost should always be followed by /freeze
storm_data$EVTYPE.clean <- gsub("FROST$", "FROST/FREEZE", storm_data$EVTYPE.clean, ignore.case = TRUE)
#get rid of "DAMAGE"
storm_data$EVTYPE.clean <- gsub(" DAMAGE", "", storm_data$EVTYPE.clean, ignore.case = TRUE)
#take out any brackets and their contents
storm_data$EVTYPE.clean <- gsub("\\(.*\\)", "", storm_data$EVTYPE.clean, ignore.case = TRUE)
#if we've managed to add leading and trailing whitesapce, get rid of that
storm_data$EVTYPE.clean <- str_trim(storm_data$EVTYPE.clean)
#take out any trailing Ss. The official does not contain pluralizations
storm_data$EVTYPE.clean <- gsub("S$","", storm_data$EVTYPE.clean, ignore.case = TRUE)
#take out any double spaces
storm_data$EVTYPE.clean <- gsub("  ", " ", storm_data$EVTYPE.clean)
#i think it's possible we introduced whitespace, better trim again
storm_data$EVTYPE.clean <- str_trim(storm_data$EVTYPE.clean)
match_vector <- amatch(storm_data$EVTYPE.clean , evtypes$EVTYPE.offical)
storm_data$EVTYPE.clean <- evtypes$EVTYPE.offical[match_vector]
#finally, anything that we haven't converted should go from NA to OTHER
storm_data$EVTYPE.clean[is.na(storm_data$EVTYPE.clean)] <- "OTHER"
#convert the damage and their partner exponent vairables to a cash variable
#we will use the below qdap table to map exponent to a multiplier variable and then to cash
h = 10^2
k = 10^3
th = 10^4
hh = 10^5
m = 10^6
b = 10^9
key <- data.frame(
c( "H", "h", "2",
"k", "K", "3",
"4",
"5",
"m", "M", "6",
"b", "B","9"),
c( h, h, h,
k, k, k,
th,
hh,
m, m, m,
b, b, b)
)
colnames(key) <- c("key", "value")
storm_data$CROP.multiplier <- lookup(key.match = key, storm_data$CROPDMGEXP, missing = 1)
storm_data$CROP.cash <- storm_data$CROPDMG * storm_data$CROP.multiplier
storm_data$PROP.multiplier <- lookup(key.match = key, storm_data$PROPDMGEXP, missing = 1)
storm_data$PROP.cash <- storm_data$PROPDMG * storm_data$PROP.multiplier
# get rid of some of the working columns, just keep what he need going forward
cols_to_keep <- c("YEAR",
"EVTYPE.clean",
"CROP.cash",
"PROP.cash"
"INJRUIES",
"FATALITIES")
storm_data <- storm_data[cols_to_keep]
cols_to_keep <- c("YEAR",
"EVTYPE.clean",
"INJURIES",
"FATALITIES",
"CROP_DAMAGE",
"PROPERTY_DAMAGE")
cols_to_keep
library(dplyr)
library(qdap)
library(stringr)
library(stringdist)
source_url = "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
local_filename = "StormData.csv.bz2"
evtype_file = "official_evtype.csv"
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
#download.file(source_url, destfile = local_filename)
#storm_data_full <- read.csv(bzfile(local_filename), strip.white=TRUE)
storm_data_full <- read.csv(local_filename, strip.white=TRUE)
cols_to_keep <- c("BGN_DATE",
"CROPDMG",
"CROPDMGEXP",
"PROPDMG",
"PROPDMGEXP",
"EVTYPE",
"INJURIES",
"FATALITIES")
storm_data <- storm_data_full[cols_to_keep]
#Pull the year out of the BGN_DATE column.
regex_pattern <- "\\d\\d?/\\d\\d?/(\\d\\d\\d\\d).*"
storm_data$YEAR <- as.numeric(gsub(regex_pattern, "\\1", storm_data$BGN_DATE))
#since we want to be fair to all the events
storm_data <- storm_data[storm_data$YEAR >= "1996",]
evtypes <- read.csv("official_evtype.csv", strip.white = TRUE)
evtypes$EVTYPE.offical <- toupper(evtypes$EVTYPE.offical)
#convert all of EVTYPE to upper case
storm_data$EVTYPE.clean <- str_trim(toupper(storm_data$EVTYPE))
#remove all summary rows, i.e., rows containing the word "SUMMARY" from EVTYPE.clean
storm_data <- storm_data[grep(".*(SUMMARY).*$", storm_data$EVTYPE.clean, invert = TRUE),]
#replace all instances of TSTM with THUNDERSTORM
storm_data$EVTYPE.clean <- gsub("TSTM", "THUNDERSTORM", storm_data$EVTYPE.clean, ignore.case = TRUE)
#cold should always be followed by /wind chill
storm_data$EVTYPE.clean <- gsub("COLD$", "COLD/WIND CHILL", storm_data$EVTYPE.clean, ignore.case = TRUE)
#hurricane should always be followed by /typhon
storm_data$EVTYPE.clean <- gsub("HURRICANE$", "HURRICANE/TYPHOON", storm_data$EVTYPE.clean, ignore.case = TRUE)
#frost should always be followed by /freeze
storm_data$EVTYPE.clean <- gsub("FROST$", "FROST/FREEZE", storm_data$EVTYPE.clean, ignore.case = TRUE)
#get rid of "DAMAGE"
storm_data$EVTYPE.clean <- gsub(" DAMAGE", "", storm_data$EVTYPE.clean, ignore.case = TRUE)
#take out any brackets and their contents
storm_data$EVTYPE.clean <- gsub("\\(.*\\)", "", storm_data$EVTYPE.clean, ignore.case = TRUE)
#if we've managed to add leading and trailing whitesapce, get rid of that
storm_data$EVTYPE.clean <- str_trim(storm_data$EVTYPE.clean)
#take out any trailing Ss. The official does not contain pluralizations
storm_data$EVTYPE.clean <- gsub("S$","", storm_data$EVTYPE.clean, ignore.case = TRUE)
#take out any double spaces
storm_data$EVTYPE.clean <- gsub("  ", " ", storm_data$EVTYPE.clean)
#i think it's possible we introduced whitespace, better trim again
storm_data$EVTYPE.clean <- str_trim(storm_data$EVTYPE.clean)
match_vector <- amatch(storm_data$EVTYPE.clean , evtypes$EVTYPE.offical)
storm_data$EVTYPE.clean <- evtypes$EVTYPE.offical[match_vector]
#finally, anything that we haven't converted should go from NA to OTHER
storm_data$EVTYPE.clean[is.na(storm_data$EVTYPE.clean)] <- "OTHER"
#convert the damage and their partner exponent vairables to a cash variable
#we will use the below qdap table to map exponent to a multiplier variable and then to cash
h = 10^2
k = 10^3
th = 10^4
hh = 10^5
m = 10^6
b = 10^9
key <- data.frame(
c( "H", "h", "2",
"k", "K", "3",
"4",
"5",
"m", "M", "6",
"b", "B","9"),
c( h, h, h,
k, k, k,
th,
hh,
m, m, m,
b, b, b)
)
colnames(key) <- c("key", "value")
#perform a simple key match to get a multiplier, then multiply to cash
storm_data$CROP.multiplier <- lookup(key.match = key, storm_data$CROPDMGEXP, missing = 1)
storm_data$CROP_DAMAGE <- storm_data$CROPDMG * storm_data$CROP.multiplier
#repeate for property
storm_data$PROP.multiplier <- lookup(key.match = key, storm_data$PROPDMGEXP, missing = 1)
storm_data$PROPERTY_DAMAGE<- storm_data$PROPDMG * storm_data$PROP.multiplier
setwd("~/Desktop/RepData_Project2")
# get rid of some of the working columns, just keep what he need going forward
cols_to_keep <- c("YEAR",
"EVTYPE.clean",
"INJURIES",
"FATALITIES",
"CROP_DAMAGE",
"PROPERTY_DAMAGE")
storm_data <- storm_data[cols_to_keep]
storm_data_by_event <- group_by(storms, EVTYPE)
storm_data_by_event <- group_by(storm_data, EVTYPE.clean)
storm_summary <- summarise(storms_by_event, FATALITIES.total = sum(FATALITIES))
storm_summary <- summarise(storm_data_by_event, FATALITIES.total = sum(FATALITIES))
storm_summary <- summarise(storm_data_by_event, FATALITIES.total = sum(FATALITIES), INJURIES.total = sum(INJURIES))
storm_summary
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.R', echo=TRUE)
storm_summary <- summarise(storm_data_by_event, FATALITIES.total = sum(FATALITIES), INJURIES.total = sum(INJURIES))
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.R')
View(storm_summary)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
library(lattice)
plot(storm_summary)
plot(storm_summary$FATALITIES.total, type = "b")
barplotplot(storm_summary$FATALITIES.total)
barplot(storm_summary$FATALITIES.total)
barplot(storm_summary$FATALITIES.total, names = storm_summary$EVTYPE.clean)
barplot(storm_summary$FATALITIES.total, names = storm_summary$EVTYPE.clean, horiz = TRUE)
View(storm_summary)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
View(damage_summary)
View(harm_summary)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
View(damage_summary)
library(ggplot2)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
?aes
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r')
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
source('~/Desktop/RepData_Project2/rough work/analysis_scratch.r', echo=TRUE)
storm_data_by_event <- group_by(storm_data, EVTYPE.clean)
harm_summary <- summarise(storm_data_by_event,
FATALITIES.total = sum(FATALITIES),
INJURIES.total = sum(INJURIES))
damage_summary <- summarise(storm_data_by_event,
CROP_DAMAGE.total = sum(CROP_DAMAGE),
PROPERTY_DAMAGE.total = sum(PROPERTY_DAMAGE))
damage_summary$TOTAL <- damage_summary$CROP_DAMAGE.total + damage_summary$PROPERTY_DAMAGE.total
ggplot(harm_summary, aes(factor(EVTYPE.clean), FATALITIES.total))+
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")+
coord_flip()
ggplot(harm_summary, aes(x = factor(EVTYPE.clean), y = INJURIES.total))+
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")+
coord_flip()
storm_data_by_event <- group_by(storm_data, EVTYPE.clean)
harm_summary <- summarise(storm_data_by_event,
FATALITIES.total = sum(FATALITIES),
INJURIES.total = sum(INJURIES))
damage_summary <- summarise(storm_data_by_event,
CROP_DAMAGE.total = sum(CROP_DAMAGE),
PROPERTY_DAMAGE.total = sum(PROPERTY_DAMAGE))
damage_summary$TOTAL <- damage_summary$CROP_DAMAGE.total + damage_summary$PROPERTY_DAMAGE.total
ggplot(harm_summary, aes(factor(EVTYPE.clean), FATALITIES.total))+
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")+
coord_flip()
ggplot(harm_summary, aes(x = factor(EVTYPE.clean), y = INJURIES.total))+
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")+
labs(title = "Total Injuries Since 1996 by Storm Type", x = "Event Type", y = "Total Injuries")
coord_flip()
storm_data_by_event <- group_by(storm_data, EVTYPE.clean)
harm_summary <- summarise(storm_data_by_event,
FATALITIES.total = sum(FATALITIES),
INJURIES.total = sum(INJURIES))
damage_summary <- summarise(storm_data_by_event,
CROP_DAMAGE.total = sum(CROP_DAMAGE),
PROPERTY_DAMAGE.total = sum(PROPERTY_DAMAGE))
damage_summary$TOTAL <- damage_summary$CROP_DAMAGE.total + damage_summary$PROPERTY_DAMAGE.total
ggplot(harm_summary, aes(factor(EVTYPE.clean), FATALITIES.total))+
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")+
coord_flip()
ggplot(harm_summary, aes(x = factor(EVTYPE.clean), y = INJURIES.total))+
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2") +
labs(title = "Total Injuries Since 1996 by Storm Type", x = "Event Type", y = "Total Injuries") +
coord_flip()
storm_data_by_event <- group_by(storm_data, EVTYPE.clean)
harm_summary <- summarise(storm_data_by_event,
FATALITIES.total = sum(FATALITIES),
INJURIES.total = sum(INJURIES))
damage_summary <- summarise(storm_data_by_event,
CROP_DAMAGE.total = sum(CROP_DAMAGE),
PROPERTY_DAMAGE.total = sum(PROPERTY_DAMAGE))
damage_summary$TOTAL <- damage_summary$CROP_DAMAGE.total + damage_summary$PROPERTY_DAMAGE.total
ggplot(harm_summary, aes(factor(EVTYPE.clean), FATALITIES.total))+
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")+
coord_flip()
ggplot(harm_summary, aes(x = factor(EVTYPE.clean), y = INJURIES.total))+
geom_bar(stat="identity") +
labs(title = "Total Injuries Since 1996 by Storm Type", x = "Event Type", y = "Total Injuries") +
coord_flip()
storm_data_by_event <- group_by(storm_data, EVTYPE.clean)
harm_summary <- summarise(storm_data_by_event,
FATALITIES.total = sum(FATALITIES),
INJURIES.total = sum(INJURIES))
damage_summary <- summarise(storm_data_by_event,
CROP_DAMAGE.total = sum(CROP_DAMAGE),
PROPERTY_DAMAGE.total = sum(PROPERTY_DAMAGE))
damage_summary$TOTAL <- damage_summary$CROP_DAMAGE.total + damage_summary$PROPERTY_DAMAGE.total
ggplot(harm_summary, aes(factor(EVTYPE.clean), FATALITIES.total))+
geom_bar(stat="identity") +
labs(title = "Total Fatalities Since 1996 by Storm Type", x = "Event Type", y = "Total Fatalities") +
coord_flip()
ggplot(harm_summary, aes(x = factor(EVTYPE.clean), y = INJURIES.total))+
geom_bar(stat="identity") +
labs(title = "Total Injuries Since 1996 by Storm Type", x = "Event Type", y = "Total Injuries") +
coord_flip()
ggplot(damage_summary, aes(x = factor(EVTYPE.clean), y = TOTAL))+
geom_bar(stat="identity") +
labs(title = "Combined Property and Crop Damage Since 1996 by Storm Type", x = "Event Type", y = "Total Damage") +
coord_flip()
storm_data_by_event <- group_by(storm_data, EVTYPE.clean)
harm_summary <- summarise(storm_data_by_event,
FATALITIES.total = sum(FATALITIES),
INJURIES.total = sum(INJURIES))
damage_summary <- summarise(storm_data_by_event,
CROP_DAMAGE.total = sum(CROP_DAMAGE),
PROPERTY_DAMAGE.total = sum(PROPERTY_DAMAGE))
damage_summary$TOTAL <- damage_summary$CROP_DAMAGE.total + damage_summary$PROPERTY_DAMAGE.total
ggplot(harm_summary, aes(factor(EVTYPE.clean), FATALITIES.total))+
geom_bar(stat="identity") +
labs(title = "Total Fatalities Since 1996 by Storm Type", x = "Event Type", y = "Total Fatalities") +
coord_flip()
ggplot(harm_summary, aes(x = factor(EVTYPE.clean), y = INJURIES.total))+
geom_bar(stat="identity") +
labs(title = "Total Injuries Since 1996 by Storm Type", x = "Event Type", y = "Total Injuries") +
coord_flip()
ggplot(damage_summary, aes(x = factor(EVTYPE.clean), y = CROP_DAMAGE.total))+
geom_bar(stat="identity") +
labs(title = "Combined Property and Crop Damage Since 1996 by Storm Type", x = "Event Type", y = "Total Damage") +
coord_flip()
storm_data_by_event <- group_by(storm_data, EVTYPE.clean)
harm_summary <- summarise(storm_data_by_event,
FATALITIES.total = sum(FATALITIES),
INJURIES.total = sum(INJURIES))
damage_summary <- summarise(storm_data_by_event,
CROP_DAMAGE.total = sum(CROP_DAMAGE)/1000000,
PROPERTY_DAMAGE.total = sum(PROPERTY_DAMAGE)/1000000)
damage_summary$TOTAL <- damage_summary$CROP_DAMAGE.total + damage_summary$PROPERTY_DAMAGE.total
ggplot(harm_summary, aes(factor(EVTYPE.clean), FATALITIES.total))+
geom_bar(stat="identity") +
labs(title = "Total Fatalities Since 1996 by Storm Type", x = "Event Type", y = "Total Fatalities") +
coord_flip()
ggplot(harm_summary, aes(x = factor(EVTYPE.clean), y = INJURIES.total))+
geom_bar(stat="identity") +
labs(title = "Total Injuries Since 1996 by Storm Type", x = "Event Type", y = "Total Injuries") +
coord_flip()
ggplot(damage_summary, aes(x = factor(EVTYPE.clean), y = CROP_DAMAGE.total))+
geom_bar(stat="identity") +
labs(title = "Combined Property and Crop Damage Since 1996 by Storm Type", x = "Event Type", y = "Total Damage") +
coord_flip()
storm_data_by_event <- group_by(storm_data, EVTYPE.clean)
harm_summary <- summarise(storm_data_by_event,
FATALITIES.total = sum(FATALITIES),
INJURIES.total = sum(INJURIES))
damage_summary <- summarise(storm_data_by_event,
CROP_DAMAGE.total = sum(CROP_DAMAGE)/1000000,
PROPERTY_DAMAGE.total = sum(PROPERTY_DAMAGE)/1000000)
damage_summary$TOTAL <- damage_summary$CROP_DAMAGE.total + damage_summary$PROPERTY_DAMAGE.total
ggplot(harm_summary, aes(factor(EVTYPE.clean), FATALITIES.total))+
geom_bar(stat="identity") +
labs(title = "Total Fatalities Since 1996 by Storm Type", x = "Event Type", y = "Total Fatalities") +
coord_flip()
ggplot(harm_summary, aes(x = factor(EVTYPE.clean), y = INJURIES.total))+
geom_bar(stat="identity") +
labs(title = "Total Injuries Since 1996 by Storm Type", x = "Event Type", y = "Total Injuries") +
coord_flip()
ggplot(damage_summary, aes(x = factor(EVTYPE.clean), y = TOTAL))+
geom_bar(stat="identity") +
labs(title = "Combined Property and Crop Damage Since 1996 by Storm Type", x = "Event Type", y = "Total Damage (in Millions of Dollars)") +
coord_flip()
ggplot(harm_summary, aes(factor(EVTYPE.clean), FATALITIES.total))+
geom_bar(stat="identity") +
labs(title = "Total Fatalities Since 1996 by Storm Type", x = "Event Type", y = "Total Fatalities") +
coord_flip()
length( unique(storm_data_full$EVTYPE))
head(harm_summary)
head(arrange(harm_summary, desc(FATALITIES.total))
)
head(arrange(harm_summary, desc(FATALITIES.total)))
head(arrange(harm_summary, desc(INJURIES)))
head(arrange(damage_summary, desc(TOTAL)))
# get rid of some of the working columns, just keep what he need going forward
cols_to_keep <- c("YEAR",
"EVTYPE.clean",
"INJURIES",
"FATALITIES",
"CROP_DAMAGE",
"PROPERTY_DAMAGE")
storm_data <- storm_data[cols_to_keep]
head(arrange(harm_summary, desc(FATALITIES.total)))
head(arrange(harm_summary, desc(INJURIES.total)))
head(arrange(damage_summary, desc(TOTAL)))
ggplot(damage_summary, aes(x = factor(EVTYPE.clean), y = TOTAL))+
geom_bar(stat="identity") +
labs(title = "Combined Property and Crop Damage Since 1996 by Storm Type", x = "Event Type", y = "Total Damage (in Millions of Dollars)") +
coord_flip()
